Search.setIndex({"docnames": ["api", "auto_examples/plot_pc_alg", "conditional_independence", "constraint_causal_discovery", "generated/dodiscover.ContextBuilder", "generated/dodiscover.EquivalenceClass", "generated/dodiscover.Graph", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest", "generated/dodiscover.cd.BregmanCDTest", "generated/dodiscover.cd.KernelCDTest", "generated/dodiscover.ci.BaseConditionalIndependenceTest", "generated/dodiscover.ci.CMITest", "generated/dodiscover.ci.ClassifierCITest", "generated/dodiscover.ci.ClassifierCMITest", "generated/dodiscover.ci.FisherZCITest", "generated/dodiscover.ci.GSquareCITest", "generated/dodiscover.ci.KernelCITest", "generated/dodiscover.ci.Oracle", "generated/dodiscover.ci.kernel_utils.compute_kernel", "generated/dodiscover.ci.kernel_utils.corrent_matrix", "generated/dodiscover.ci.kernel_utils.f_divergence_score", "generated/dodiscover.ci.kernel_utils.kl_divergence_score", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation", "generated/dodiscover.constraint.ConditioningSetSelection", "generated/dodiscover.constraint.FCI", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton", "generated/dodiscover.constraint.LearnSkeleton", "generated/dodiscover.constraint.PC", "generated/dodiscover.context.Context", "generated/dodiscover.make_context", "generated/dodiscover.metrics.confusion_matrix_networks", "generated/dodiscover.metrics.structure_hamming_dist", "generated/dodiscover.typing.Column", "generated/dodiscover.typing.NetworkxGraph", "generated/dodiscover.typing.SeparatingSet", "index", "installation", "tutorials/index", "tutorials/markovian/example-pc-algo", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/plot_pc_alg.rst", "conditional_independence.rst", "constraint_causal_discovery.rst", "generated/dodiscover.ContextBuilder.rst", "generated/dodiscover.EquivalenceClass.rst", "generated/dodiscover.Graph.rst", "generated/dodiscover.cd.BaseConditionalDiscrepancyTest.rst", "generated/dodiscover.cd.BregmanCDTest.rst", "generated/dodiscover.cd.KernelCDTest.rst", "generated/dodiscover.ci.BaseConditionalIndependenceTest.rst", "generated/dodiscover.ci.CMITest.rst", "generated/dodiscover.ci.ClassifierCITest.rst", "generated/dodiscover.ci.ClassifierCMITest.rst", "generated/dodiscover.ci.FisherZCITest.rst", "generated/dodiscover.ci.GSquareCITest.rst", "generated/dodiscover.ci.KernelCITest.rst", "generated/dodiscover.ci.Oracle.rst", "generated/dodiscover.ci.kernel_utils.compute_kernel.rst", "generated/dodiscover.ci.kernel_utils.corrent_matrix.rst", "generated/dodiscover.ci.kernel_utils.f_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.kl_divergence_score.rst", "generated/dodiscover.ci.kernel_utils.von_neumann_divergence.rst", "generated/dodiscover.ci.monte_carlo.generate_knn_in_subspace.rst", "generated/dodiscover.ci.monte_carlo.restricted_nbr_permutation.rst", "generated/dodiscover.constraint.ConditioningSetSelection.rst", "generated/dodiscover.constraint.FCI.rst", "generated/dodiscover.constraint.LearnSemiMarkovianSkeleton.rst", "generated/dodiscover.constraint.LearnSkeleton.rst", "generated/dodiscover.constraint.PC.rst", "generated/dodiscover.context.Context.rst", "generated/dodiscover.make_context.rst", "generated/dodiscover.metrics.confusion_matrix_networks.rst", "generated/dodiscover.metrics.structure_hamming_dist.rst", "generated/dodiscover.typing.Column.rst", "generated/dodiscover.typing.NetworkxGraph.rst", "generated/dodiscover.typing.SeparatingSet.rst", "index.rst", "installation.md", "tutorials/index.rst", "tutorials/markovian/example-pc-algo.ipynb", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API", "PC algorithm for causal discovery from observational data without latent confounders", "<span class=\"section-number\">2. </span>Independence", "<span class=\"section-number\">1. </span>Constraint-based causal discovery", "dodiscover.ContextBuilder", "dodiscover.EquivalenceClass", "dodiscover.Graph", "dodiscover.cd.BaseConditionalDiscrepancyTest", "<span class=\"section-number\">3.3.1. </span>dodiscover.cd.BregmanCDTest", "<span class=\"section-number\">3.2.1. </span>dodiscover.cd.KernelCDTest", "dodiscover.ci.BaseConditionalIndependenceTest", "<span class=\"section-number\">2.1.1. </span>dodiscover.ci.CMITest", "<span class=\"section-number\">2.5.1. </span>dodiscover.ci.ClassifierCITest", "<span class=\"section-number\">2.1.2. </span>dodiscover.ci.ClassifierCMITest", "<span class=\"section-number\">2.2.1. </span>dodiscover.ci.FisherZCITest", "<span class=\"section-number\">2.3.1. </span>dodiscover.ci.GSquareCITest", "<span class=\"section-number\">2.4.1. </span>dodiscover.ci.KernelCITest", "dodiscover.ci.Oracle", "dodiscover.ci.kernel_utils.compute_kernel", "dodiscover.ci.kernel_utils.corrent_matrix", "dodiscover.ci.kernel_utils.f_divergence_score", "dodiscover.ci.kernel_utils.kl_divergence_score", "dodiscover.ci.kernel_utils.von_neumann_divergence", "dodiscover.ci.monte_carlo.generate_knn_in_subspace", "dodiscover.ci.monte_carlo.restricted_nbr_permutation", "<span class=\"section-number\">1.5.1. </span>dodiscover.constraint.ConditioningSetSelection", "dodiscover.constraint.FCI", "dodiscover.constraint.LearnSemiMarkovianSkeleton", "dodiscover.constraint.LearnSkeleton", "dodiscover.constraint.PC", "dodiscover.context.Context", "dodiscover.make_context", "dodiscover.metrics.confusion_matrix_networks", "dodiscover.metrics.structure_hamming_dist", "dodiscover.typing.Column", "dodiscover.typing.NetworkxGraph", "dodiscover.typing.SeparatingSet", "<strong>dodiscover</strong>", "Installation", "Tutorials", "PC algorithm for causal discovery from observational data without latent confounders", "Examples and Tutorials using DoDiscover", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"dodiscov": [0, 1, 3, 38, 40, 42, 43, 45], "thi": [0, 1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43], "i": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40], "applic": [0, 40], "program": 0, "interfac": [0, 7, 10], "refer": [0, 8, 9, 11, 17, 26, 27, 28, 29, 37], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 40, 45], "camelcas": 0, "name": [0, 4, 5, 26, 27, 28, 29, 30, 34, 35, 36], "function": [0, 7, 8, 9, 10, 11, 12, 13, 18, 20, 21, 26, 27, 28, 29, 32, 45], "underscore_cas": 0, "group": [0, 2, 7, 8, 9], "themat": 0, "analysi": 0, "stage": [0, 3, 27], "rather": 0, "than": [0, 1, 3, 11, 33, 40], "just": [0, 1, 2, 38], "data": [0, 4, 5, 6, 8, 9, 10, 11, 15, 17, 18, 19, 26, 27, 28, 29, 30, 31, 37, 39, 41, 42, 45], "mani": [0, 2, 3, 37], "case": [0, 1, 2, 3, 40], "ha": [0, 1, 2, 3, 5, 6, 7, 10, 11, 24, 27, 28, 40, 45], "addit": [0, 3, 26, 29], "form": [0, 1, 2, 3, 19, 30, 40], "apriori": [0, 1], "knowledg": [0, 4, 27, 29, 30, 40], "dataset": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 40], "from": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 20, 21, 26, 27, 28, 29, 31, 32, 38, 39, 41, 45], "differ": [0, 2, 3, 7, 8, 9, 26, 27, 28, 29, 33, 37], "environ": [0, 2, 7, 8, 9], "all": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 41, 43], "pass": [0, 1, 8, 9, 17, 26, 29], "object": [0, 1, 4, 26, 27, 28, 29, 30, 31, 40, 45], "One": [0, 2, 4, 30, 40], "should": [0, 1, 4, 10, 11, 12, 13, 14, 15, 16, 26, 29, 30, 40], "us": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 40, 45], "our": [0, 2, 37, 40], "builder": [0, 4], "make_context": [0, 1, 4, 30, 40, 45], "construct": [0, 1, 2, 40], "see": [0, 1, 2, 3, 8, 9, 11, 20, 21, 24, 26, 27, 28, 29, 37, 40], "doc": [0, 45], "more": [0, 1, 2, 3, 8, 9, 11, 26, 27, 28, 29, 33, 37, 40], "inform": [0, 3, 4, 8, 9, 11, 25, 27, 31, 42, 45], "we": [0, 1, 2, 3, 7, 8, 9, 27, 28, 30, 33, 37, 39, 40, 45], "defin": [0, 2, 11, 18, 27, 28, 30, 33, 34, 35, 36], "some": [0, 2, 25, 27, 28, 30, 41], "custom": 0, "allow": [0, 3, 25, 27], "3rd": 0, "parti": 0, "packag": [0, 37], "work": [0, 1, 4, 6, 30, 40], "mypi": 0, "experiment": [0, 3], "provid": [0, 1, 4, 27, 37, 39, 40], "an": [0, 1, 2, 3, 4, 5, 6, 17, 19, 20, 21, 26, 27, 28, 29, 30, 32, 33, 37, 40], "discrep": [0, 7, 8, 9, 37, 42, 45], "also": [0, 1, 2, 3, 9, 18, 27, 37], "known": [0, 2, 3, 17, 22, 29, 30, 33, 37], "among": [0, 2, 3, 8, 9, 18, 30], "variabl": [0, 1, 2, 3, 4, 9, 17, 26, 27, 28, 29, 30, 31, 40], "core": [0, 3, 40], "part": [0, 34, 35, 36], "infer": [0, 3, 4, 17, 19, 26, 27, 28, 29, 37, 40], "procedur": [0, 8, 28], "other": [0, 1, 2, 3, 9, 27, 28, 30, 40], "includ": [0, 1, 4, 30, 45], "support": [0, 8, 9, 30, 31, 38], "mont": 0, "carlo": 0, "click": 1, "here": [1, 2, 3, 11, 40, 41, 45], "download": [1, 41], "full": [1, 29], "exampl": [1, 2, 25, 27, 30, 33, 37, 40], "code": [1, 41], "model": [1, 2, 3, 8, 9, 17, 27, 28, 37, 40], "scm": [1, 42], "demonstr": [1, 40, 41], "how": [1, 3, 27, 28, 37, 40, 41], "The": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40], "when": [1, 2, 3, 11, 25, 27, 30, 39, 40, 43], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43], "unobserv": [1, 4, 30, 40], "That": [1, 3, 33], "mean": [1, 2, 3, 9, 26, 27, 28, 29, 40], "ani": [1, 3, 4, 5, 6, 7, 10, 18, 26, 27, 28, 29, 30, 32, 40], "set": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 42, 45], "common": [1, 40], "caus": [1, 40, 45], "In": [1, 2, 3, 9, 11, 24, 40, 45], "word": [1, 3, 40], "exogen": 1, "assum": [1, 3, 11, 26, 29], "author": 1, "adam": [1, 45], "li": [1, 45], "adam2392": 1, "gmail": 1, "com": [1, 26, 38], "licens": 1, "bsd": 1, "3": [1, 2, 3, 12, 13, 28, 29, 31, 38, 40], "claus": 1, "import": [1, 2, 11, 40], "numpi": [1, 40], "np": [1, 11, 32, 40], "networkx": [1, 5, 6, 26, 29, 30, 37, 40, 45], "nx": [1, 17, 26, 27, 28, 29, 30, 33, 40], "scipi": [1, 11], "stat": [1, 9, 14, 15, 16], "pywhy_graph": [1, 3, 40], "viz": [1, 40], "draw": [1, 40], "ci": [1, 2, 3, 8, 26, 27, 28, 29, 40, 42, 45], "gsquarecitest": [1, 40, 42], "oracl": [1, 40], "panda": [1, 26, 29], "pd": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 45], "dowhi": 1, "gcm": 1, "util": [1, 4, 37], "gener": [1, 2, 3, 7, 8, 9, 11, 12, 13, 23, 34, 35, 36, 40, 41], "set_random_se": 1, "first": [1, 3, 11, 19, 22, 27, 38, 39, 40], "start": [1, 4, 30], "induc": [1, 40], "graph": [1, 3, 4, 5, 17, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 40, 45], "which": [1, 2, 3, 7, 8, 9, 10, 11, 18, 25, 26, 27, 28, 29, 30, 32, 40, 45], "can": [1, 2, 3, 9, 11, 18, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41], "visual": [1, 27, 40], "due": [1, 3, 40], "markov": [1, 3, 17, 40], "assumpt": [1, 2, 4, 27, 28, 30, 39, 40, 42], "d": [1, 3, 17, 21, 22, 25, 27, 40, 45], "separ": [1, 3, 17, 25, 26, 27, 28, 29, 40, 45], "examin": 1, "condition": [1, 2, 7, 8, 12, 13], "random": [1, 2, 7, 8, 9, 11, 24], "seed": [1, 7, 8, 9, 11, 24, 40], "make": [1, 3, 39, 40], "reproduc": 1, "12345": 1, "rng": 1, "randomst": 1, "mycustommodel": 1, "predictionmodel": 1, "def": 1, "__init__": 1, "self": [1, 4, 30], "coeffici": 1, "fit": [1, 26, 27, 28, 29, 40], "x": [1, 2, 3, 7, 8, 9, 11, 18, 20, 25, 26, 27, 28, 29, 40], "y": [1, 2, 3, 7, 8, 9, 11, 18, 25, 26, 27, 28, 29], "noth": 1, "sinc": [1, 2, 45], "know": [1, 3, 27, 40], "ground": [1, 17, 40], "truth": [1, 17, 40], "predict": [1, 2, 7, 8, 9, 17, 27, 29, 32, 33], "return": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "clone": [1, 38], "don": 1, "t": [1, 9, 11, 34, 35, 36, 40], "realli": 1, "need": [1, 2, 29, 40, 41], "actual": [1, 2], "1234": [1, 40], "result": [1, 3, 4, 27, 28, 31, 40], "z": [1, 2, 3, 11, 26, 27, 28, 29], "w": 1, "g": [1, 2, 3, 34, 35, 36, 40], "digraph": [1, 4, 17, 33, 35, 40], "causal_model": 1, "probabilisticcausalmodel": 1, "set_causal_mechan": 1, "scipydistribut": 1, "binom": 1, "p": [1, 2, 7, 8, 9, 11, 14, 15, 16, 20, 21, 26, 27, 28, 29, 40], "0": [1, 2, 7, 8, 11, 12, 13, 17, 26, 27, 28, 29, 33, 37, 40, 43], "5": [1, 2, 3, 11, 13, 40], "n": [1, 19, 21, 26, 27, 28, 29, 40], "1": [1, 2, 3, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 37, 40, 43], "9": [1, 3, 17, 27, 29, 40], "additivenoisemodel": 1, "prediction_model": 1, "noise_model": 1, "8": [1, 3, 38], "would": [1, 2, 3, 25, 33, 40], "paramet": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33], "do": [1, 3], "anyth": 1, "method": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 45], "onli": [1, 2, 3, 8, 9, 12, 13, 24, 26, 27, 28, 29, 32, 33, 40], "ensur": [1, 40], "each": [1, 2, 3, 7, 8, 9, 11, 12, 13, 18, 23, 24, 26, 27, 28, 29, 30, 40], "fcm": 1, "correct": [1, 2, 40], "local": [1, 29, 40], "hash": [1, 30], "e": [1, 2, 3, 9, 11, 26, 27, 28, 29, 34, 35, 36, 38, 40], "get": [1, 5, 6, 30], "inconsist": 1, "error": [1, 2, 9, 40], "modifi": 1, "afterward": 1, "updat": [1, 30, 45], "have": [1, 2, 3, 5, 6, 26, 29, 30, 33, 34, 35, 36, 40, 45], "empti": [1, 2, 3, 4, 9, 27, 28, 30], "small": 1, "workaround": 1, "pre": [1, 45], "datafram": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29], "column": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 32, 40], "sampl": [1, 2, 7, 8, 9, 11, 12, 13, 18, 20, 21, 23, 24, 26, 29, 37, 40, 45], "draw_sampl": 1, "num_sampl": 1, "500": 1, "print": [1, 40], "head": [1, 40], "seri": [1, 40], "col": 1, "uniqu": 1, "4": [1, 2, 3, 20, 21, 40], "00": 1, "": [1, 3, 12, 13, 26, 27, 29, 30, 32, 37, 40, 43], "mechan": 1, "node": [1, 3, 5, 6, 9, 17, 25, 26, 27, 28, 29, 30], "100": [1, 11, 13], "1832": 1, "37it": 1, "2": [1, 2, 3, 11, 17, 19, 27, 28, 29, 31, 32, 40], "row": [1, 2, 26, 29, 32], "dtype": [1, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 32], "graphviz": 1, "0x7f26ab5cd460": 1, "To": [1, 3, 27, 31, 37, 38, 40, 41], "constraint": [1, 4, 7, 10, 37, 40, 42, 45], "base": [1, 5, 6, 7, 10, 11, 12, 13, 26, 29, 37, 40, 42, 45], "wai": [1, 3, 4, 7, 8, 27, 28, 33, 40], "There": [1, 2, 3, 24, 27, 28, 34, 35, 36, 40], "variou": [1, 2, 27, 28, 40], "evalu": [1, 40], "If": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40], "appli": [1, 3, 4, 9, 26, 29, 40], "real": [1, 40], "want": [1, 40], "best": [1, 40], "suit": [1, 2, 40], "note": [1, 2, 3, 8, 9, 11, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 43], "becaus": [1, 2, 3, 25, 40], "finit": [1, 2, 40], "size": [1, 11, 26, 27, 28, 29, 40], "bound": [1, 2, 9, 20, 21], "incorrect": [1, 33, 40], "orient": [1, 3, 5, 26, 27, 29, 33, 40, 45], "edg": [1, 3, 4, 5, 6, 26, 27, 28, 29, 30, 32, 33, 40], "interest": [1, 3, 40], "ideal": [1, 40], "imbu": [1, 40], "queri": [1, 3, 17, 23, 40], "statement": [1, 3, 17, 40], "help": [1, 2, 40], "one": [1, 2, 3, 25, 26, 27, 28, 29, 31, 33, 40], "determin": [1, 2, 7, 8, 11, 26, 27, 29, 40], "what": [1, 2, 22, 29, 37, 40, 43], "ci_estim": [1, 26, 27, 28, 29, 40], "data_typ": [1, 15, 40], "discret": [1, 42], "pywhi": [1, 37, 38, 40, 45], "introduc": [1, 40], "departur": 1, "where": [1, 2, 3, 7, 8, 9, 11, 12, 13, 20, 21, 28, 29, 33, 40], "user": [1, 3, 30, 34, 35, 36, 37, 40], "primari": [1, 40], "input": [1, 27, 40], "problem": [1, 2, 12, 13, 26, 29, 40], "approach": [1, 3, 8, 9, 27, 42], "encourag": [1, 37, 40], "novic": 1, "philosoph": [1, 40], "stone": [1, 40], "convert": [1, 2, 5, 6, 7, 10, 11, 12, 13, 29, 32, 40], "relationship": [1, 40], "With": [1, 2], "mindset": 1, "tend": [1, 40], "surrend": [1, 40], "task": [1, 40], "domain": [1, 4, 30, 40], "specif": [1, 5, 6, 7, 10, 26, 27, 28, 29, 37, 40], "enabl": [1, 7, 10, 40], "identifi": [1, 40], "contrast": 1, "kei": [1, 26, 27, 28, 29, 40], "strength": [1, 40], "guid": [1, 37, 40], "specifi": [1, 3, 40], "up": [1, 40], "front": [1, 40], "dag": [1, 3, 26, 29, 33, 37, 40], "befor": [1, 26, 27, 28, 29, 40], "ad": [1, 40], "address": [1, 40], "given": [1, 2, 3, 7, 8, 12, 13, 17, 19, 25, 26, 27, 28, 29, 32, 40], "those": [1, 3, 32, 40], "sens": [1, 29], "hous": [1, 40], "both": [1, 2, 9, 30, 40], "relev": [1, 31, 37, 40], "mai": [1, 2, 3, 24, 26, 32, 40], "downstream": [1, 40], "build": [1, 4, 8, 9, 30, 31, 37, 40], "altern": [1, 2, 3, 28, 40], "could": [1, 3, 40], "sai": [1, 33], "fix": [1, 11, 40, 43, 44, 45], "necessarili": [1, 2], "pure": 1, "cpdag": [1, 3, 29, 40], "therefor": [1, 8, 9, 27, 33], "caution": 1, "thei": [1, 2, 3, 17, 19, 28, 29], "leverag": [1, 2, 3], "id": 1, "estim": [1, 2, 7, 8, 9, 11, 13, 18, 19, 21, 26, 29, 30], "block": 1, "python": [1, 37, 38, 41], "included_edg": [1, 4, 30], "now": [1, 3, 27, 40], "readi": [1, 40], "show": [1, 3, 40], "output": [1, 3, 40], "scenario": [1, 40], "infinit": [1, 2, 40], "amount": [1, 2, 40], "complet": [1, 2, 3, 25, 26, 27, 28, 29, 40], "partial": [1, 3, 4, 26, 37, 40, 42], "direct": [1, 2, 3, 5, 27, 30, 33, 37, 40, 45], "acycl": [1, 3, 27, 37, 40], "equival": [1, 2, 3, 5, 29, 40], "encod": [1, 26, 27, 28, 40], "depend": [1, 2, 3, 11, 26, 27, 28, 29, 40, 45], "were": [1, 40], "graph_": [1, 29, 40], "dot_graph": 1, "render": 1, "outfil": 1, "oracle_cpdag": 1, "png": 1, "view": [1, 7, 8, 11, 40], "true": [1, 2, 12, 16, 18, 25, 26, 27, 28, 29, 30, 32, 33, 40], "perform": [1, 2, 24, 40], "hypothesi": [1, 2, 3, 7, 8, 9, 28, 29, 40], "presenc": [1, 3, 26, 40], "nois": [1, 40], "alwai": [1, 34, 35, 36, 40], "possibl": [1, 3, 25, 26, 27, 28, 29, 30, 40], "mistak": [1, 33, 40], "fail": [1, 2, 3], "find": [1, 37], "between": [1, 2, 5, 6, 9, 17, 18, 22, 25, 26, 27, 29, 33, 40], "correspond": [1, 3, 11, 18, 21, 30], "collid": [1, 3, 25, 26, 27, 29, 40], "illustr": [1, 37], "implicit": 1, "type": [1, 2, 5, 6, 12, 13, 30, 31, 32, 33, 37, 40, 45], "ii": 1, "ci_cpdag": 1, "total": 1, "time": [1, 7, 8, 9, 11], "script": 1, "minut": 1, "826": 1, "second": [1, 3, 19, 22, 27], "sourc": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41], "plot_pc_alg": 1, "py": [1, 38], "jupyt": [1, 41], "notebook": [1, 41], "ipynb": 1, "galleri": [1, 41], "sphinx": [1, 41], "probabilist": [2, 3], "two": [2, 3, 5, 6, 8, 9, 22, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36], "realiz": 2, "doe": [2, 3, 27, 32], "affect": 2, "distribut": [2, 3, 7, 8, 9, 11, 12, 13, 20, 21, 26, 29], "It": [2, 3, 9, 11, 29, 33], "fundament": [2, 42], "notion": 2, "probabl": [2, 40], "statist": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 40], "about": [2, 37, 40], "glean": 2, "observ": [2, 4, 10, 15, 17, 26, 28, 29, 30, 31, 39, 41, 42, 45], "test": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 37, 45], "uncondit": 2, "margin": 2, "follow": [2, 3, 21, 22, 40], "present": [2, 3, 29, 39, 40], "brief": 2, "overview": 2, "special": [2, 11, 34, 35, 36], "frame": 2, "null": [2, 3, 7, 8, 9, 11, 28, 29, 40], "pair": [2, 3, 25, 26, 29], "h_0": [2, 3, 9, 28], "perp": [2, 3, 9, 11, 27, 28, 29], "written": [2, 9], "term": [2, 8, 9, 19, 26, 40], "similarli": 2, "h_a": [2, 3], "neq": 2, "Then": [2, 3, 11, 38], "typic": [2, 9], "posit": 2, "accept": [2, 29], "upper": [2, 9, 20, 21], "rate": 2, "fals": [2, 12, 13, 26, 27, 28, 29, 33, 34, 35, 36], "alpha": [2, 3, 26, 27, 28, 29, 40], "05": [2, 16, 26, 27, 28, 29, 40], "either": [2, 26, 29, 33, 40], "attempt": 2, "character": [2, 29], "asymptot": 2, "pvalu": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29], "comput": [2, 9, 11, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 40], "compar": [2, 26, 29, 32, 33, 37, 40, 45], "state": [2, 3, 4, 30, 31], "least": [2, 32], "extrem": 2, "By": [2, 11, 12, 13, 23, 26, 27, 28, 29], "reject": [2, 3], "claim": 2, "so": [2, 3, 24, 30, 40], "fact": 2, "cannot": [2, 40], "strictli": 2, "speak": 2, "howev": [2, 3, 40], "practic": [2, 3], "causal": [2, 7, 10, 15, 17, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 45], "discoveri": [2, 4, 7, 10, 15, 17, 26, 27, 29, 30, 31, 37, 41, 42], "still": [2, 3], "conclud": [2, 3], "though": 2, "plausibl": 2, "weak": 2, "unabl": 2, "captur": [2, 4, 40], "propos": [2, 11], "reason": [2, 17, 40], "like": [2, 7, 8, 9, 31, 33, 40, 45], "most": [2, 26, 27, 28, 29, 40], "power": [2, 3], "mind": 2, "certain": [2, 26, 27, 29, 40], "underli": [2, 3, 11], "cmi": [2, 11, 13], "formul": 2, "math": 2, "int": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 36], "log": [2, 11, 21, 22], "frac": [2, 11, 21], "As": 2, "equal": [2, 8, 9, 11, 30, 40], "exactli": [2, 40], "definit": [2, 20, 21, 27], "non": [2, 11, 30, 42], "parametr": [2, 42], "thu": [2, 3], "requir": [2, 25, 27, 28], "unfortun": 2, "notori": 2, "difficult": 2, "literatur": [2, 3], "summar": 2, "kraskov": 2, "stogbauer": 2, "grassberg": 2, "ksg": 2, "via": [2, 11, 26, 33, 38, 40, 45], "nearest": [2, 11, 12, 13, 23, 24], "neighbor": [2, 5, 6, 11, 12, 13, 23, 24, 25, 26, 27, 28, 29], "knn": [2, 23], "algorithm": [2, 3, 4, 6, 7, 10, 15, 17, 24, 26, 27, 28, 29, 30, 31, 37, 39, 41, 45], "wa": [2, 3, 45], "had": 2, "obtain": 2, "valu": [2, 9, 11, 12, 13, 14, 15, 16, 22, 25, 26, 27, 28, 29, 30, 40], "reli": [2, 27], "k": [2, 9, 11, 12, 13, 19, 23, 24, 37, 45], "nn": 2, "implement": [2, 8, 9, 11, 26, 29, 40, 45], "naiv": 2, "kdtree": [2, 23], "suffer": 2, "high": [2, 3, 11, 27], "dimens": [2, 3], "dimension": [2, 11, 27], "permut": [2, 12, 13, 24], "intellig": [2, 11, 26, 29], "manner": [2, 24], "worth": 2, "good": [2, 33], "effect": [2, 9, 40, 41], "For": [2, 3, 9, 11, 25, 26, 27, 28, 29, 33, 37, 40], "variant": [2, 3, 27, 28], "forest": 2, "adapt": [2, 11], "manifold": 2, "classif": [2, 12, 13, 45], "posterior": 2, "directli": [2, 4, 30], "plug": 2, "equat": 2, "normal": [2, 32], "fast": [2, 3, 26], "effici": [2, 37, 43, 44, 45], "attract": 2, "gaussiani": 2, "unrealist": 2, "chi": 2, "squar": [2, 9], "conting": 2, "tabl": 2, "number": [2, 7, 8, 9, 11, 18, 19, 23, 26, 27, 28, 29, 33], "level": [2, 3, 15, 26, 27, 28, 29], "across": 2, "exponenti": 2, "increas": 2, "semi": [2, 27, 42], "idea": 2, "been": [2, 3, 24, 27, 28], "shown": [2, 3], "robust": [2, 42], "machin": [2, 9, 11], "learn": [2, 8, 9, 11, 25, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 45], "field": 2, "anoth": [2, 3, 7, 8, 24], "shuffl": [2, 11, 12, 13, 24], "setup": 2, "intuit": [2, 17], "similar": [2, 30], "unshuffl": 2, "achiev": 2, "trivial": 2, "50": [2, 40, 45], "accuraci": 2, "balanc": 2, "origin": [2, 12, 13, 34, 35, 36], "suffici": [2, 3, 29], "uniformli": 2, "third": 2, "must": [2, 3, 4, 8, 9, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36], "subspac": [2, 11, 12, 13, 23], "close": 2, "maintain": [2, 37], "exist": [2, 26, 27, 28, 29], "cd": [2, 38, 42, 45], "invari": [2, 3], "exhibit": 2, "question": [2, 3], "whether": [2, 7, 8, 18, 26, 27, 28, 29, 33, 40], "p_": 2, "j": [2, 19, 21, 26], "p_i": [2, 7, 8], "denot": [2, 7, 8, 9, 31], "explicitli": 2, "come": 2, "indic": [2, 3, 7, 8, 9, 12, 13, 23, 24, 30, 40], "detect": [2, 3, 40], "kind": [2, 3, 34, 35, 36, 40], "besid": 2, "entir": 2, "weight": [2, 7, 8, 9], "propens": [2, 7, 8, 9], "score": [2, 7, 8, 9, 20, 21], "6": [2, 3, 40], "von": [2, 22], "neumann": [2, 22], "7": [2, 3], "independ": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 37, 42, 45], "repres": [3, 34, 35, 36, 37, 40], "graphic": [3, 40], "under": [3, 27, 28, 45], "faith": [3, 40], "well": [3, 30, 33, 37, 40], "intend": 3, "structur": [3, 4, 27, 28, 29, 30, 32, 33, 37, 39, 40, 45], "check": [3, 5, 6, 17, 24, 25, 26, 27, 28, 29, 30, 45], "At": 3, "varieti": 3, "better": 3, "themselv": 3, "section": 3, "properti": [3, 5, 6, 17], "impli": 3, "familiar": 3, "connect": [3, 5, 6], "On": [3, 26], "hand": 3, "map": [3, 27, 28, 30], "accident": 3, "occur": 3, "theori": 3, "issu": 3, "theoret": 3, "violat": [3, 40], "diagram": 3, "measur": [3, 11], "zero": 3, "veri": [3, 7, 10, 40], "problemat": 3, "might": [3, 40], "weakli": 3, "strong": 3, "frequent": 3, "almost": 3, "sure": 3, "higher": 3, "tackl": 3, "larg": [3, 11, 40], "activ": 3, "area": 3, "research": [3, 11, 37], "peter": [3, 17, 27, 29, 39], "clark": [3, 17, 27, 29, 39], "pc": [3, 10, 15, 17, 28, 31, 39, 41, 45], "sound": 3, "its": [3, 26, 27, 28, 29], "lack": 3, "latent": [3, 4, 10, 15, 17, 26, 27, 28, 30, 31, 37, 41, 45], "confound": [3, 10, 15, 17, 26, 28, 29, 31, 37, 41, 45], "three": [3, 31, 40], "skeleton": [3, 25, 26, 27, 28, 29, 45], "phase": [3, 27], "process": [3, 30], "along": 3, "trim": 3, "track": [3, 28], "A": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 26, 27, 28, 29, 40], "contain": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 27, 28, 30], "unshield": 3, "triplet": 3, "take": [3, 12, 13, 27, 32, 40], "path": [3, 25, 26, 27, 28], "star": 3, "endpoint": [3, 5, 33], "pag": [3, 26, 27, 33, 37], "circl": [3, 5, 33], "determinist": [3, 29], "onc": [3, 32], "logic": [3, 26, 29], "rule": [3, 26, 29, 45], "u": [3, 5, 6, 9], "call": [3, 4, 26, 30, 31, 33], "meek": [3, 29], "repeatedli": 3, "until": 3, "chang": [3, 43, 44, 45], "made": 3, "without": [3, 10, 15, 17, 24, 28, 30, 31, 37, 41], "fci": [3, 45], "ancestr": [3, 26, 37], "even": 3, "select": [3, 25, 26, 27, 28, 29, 32, 45], "bia": [3, 11, 19, 26, 45], "few": 3, "minor": 3, "modif": 3, "outlin": [3, 8, 9], "compos": 3, "same": [3, 9, 18, 26, 29, 32, 33], "tri": [3, 24], "potenti": [3, 25, 45], "restart": 3, "scratch": 3, "chosen": [3, 24, 26, 29], "describ": 3, "four": 3, "add": [3, 4, 5, 6, 30, 38, 45], "six": 3, "account": [3, 26, 33], "access": [3, 31], "multipl": [3, 40], "improv": [3, 45], "target": [3, 30, 33], "psi": [3, 11], "briefli": 3, "strategi": [3, 25], "conserv": 3, "etc": 3, "creat": [4, 5, 6, 30, 31, 40, 45], "context": [4, 26, 27, 28, 29, 31, 37, 45], "ergonom": 4, "meant": 4, "sole": 4, "NOT": [4, 30], "instanti": [4, 30, 34, 35, 36], "instead": [4, 30], "popul": [4, 32], "option": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 31, 32, 33, 40], "union": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36], "none": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36], "exclud": [4, 5, 30], "networkxgraph": 4, "instanc": [4, 30, 31, 32, 33], "excluded_edg": [4, 30], "exclus": 4, "inclus": 4, "init_graph": [4, 30], "new": [4, 31, 37, 40, 43], "latent_vari": [4, 30], "float": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36], "str": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36], "tupl": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 34, 36], "default": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 33], "neither": [4, 30], "nor": [4, 30], "presum": [4, 30], "consist": [4, 17, 30, 33, 40], "observed_vari": [4, 30], "state_vari": [4, 30, 31], "var": [4, 30], "persist": [4, 30], "intermedi": [4, 30], "step": [4, 12, 13, 30], "dict": [4, 5, 26, 27, 28, 29, 30, 34, 35, 36], "list": [4, 9, 15, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 45], "arg": [5, 6], "kwarg": [5, 6], "protocol": [5, 6, 37], "attribut": [5, 6, 27, 28, 29, 30], "bidirected_edge_nam": 5, "bidirect": [5, 33], "circle_edge_nam": 5, "directed_edge_nam": 5, "excluded_tripl": 5, "tripl": 5, "iter": [5, 6, 26, 27, 28, 29], "over": [5, 6, 26, 29, 31, 32], "undirected_edge_nam": 5, "undirect": [5, 6, 26, 27, 28, 29, 32, 33, 40], "add_edg": [5, 6], "v": [5, 6], "edge_typ": [5, 6], "add_nod": [5, 6], "node_for_ad": [5, 6], "attr": [5, 6], "copi": [5, 6, 30, 31], "frozenset": [5, 30], "has_edg": [5, 6], "bool": [5, 6, 7, 8, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33], "mark_unfaithful_tripl": 5, "v_i": 5, "v_j": 5, "mark": 5, "unfaith": 5, "put": 5, "orient_uncertain_edg": 5, "uncertain": 5, "predecessor": 5, "point": [5, 11], "remove_edg": [5, 6], "remov": [5, 6, 45], "remove_edges_from": [5, 6], "remove_nod": [5, 6], "subgraph": [5, 6, 33], "successor": 5, "to_undirect": [5, 6], "fulli": [5, 6], "abstract": [7, 8, 10, 11, 12, 14, 15], "condit": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 25, 26, 27, 28, 29, 32, 37, 42, 45], "expect": [7, 10], "lightweight": [7, 10], "anyon": [7, 10], "api": [7, 10, 17, 34, 35, 36, 37, 43, 44, 45], "compute_nul": [7, 8, 9], "e_hat": [7, 8, 9], "_supportsarrai": [7, 8, 9, 18, 19, 20, 21, 22, 23, 24], "_nestedsequ": [7, 8, 9, 18, 19, 20, 21, 22, 23, 24], "complex": [7, 8, 9, 18, 19, 20, 21, 22, 23, 24], "byte": [7, 8, 9, 18, 19, 20, 21, 22, 23, 24], "null_rep": [7, 8, 9], "1000": [7, 8, 9, 11, 16, 26, 29], "random_st": [7, 8, 9, 12], "arrai": [7, 8, 9, 18, 19], "shape": [7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 32], "n_sampl": [7, 8, 9, 17, 19, 23, 24], "group_ind": [7, 8, 9], "n_features_x": [7, 8, 9, 18], "covari": [7, 8, 9, 11, 23], "n_features_i": [7, 8, 9, 18], "outcom": [7, 8, 9], "null_dist": [7, 8, 9], "df": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "y_var": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28], "group_col": [7, 8, 9], "x_var": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28], "try": [7, 8], "p_j": [7, 8], "belong": [7, 8, 9], "metric": [8, 9, 12, 13, 18, 19, 21, 45], "rbf": [8, 9, 16, 18, 19], "distance_metr": [8, 9, 18, 19], "euclidean": [8, 9, 18, 19], "kwidth": [8, 18, 19], "n_job": [8, 9, 11, 13, 16, 18, 19, 23, 27, 28], "propensity_model": [8, 9], "propensity_est": [8, 9], "bregman": [8, 22, 42], "diverg": [8, 20, 21, 22, 42], "kernel": [8, 9, 18, 19, 42], "distanc": [8, 9, 18, 19, 33, 45], "width": [8, 9, 18, 19], "kernel_util": 8, "compute_kernel": 8, "cpu": [8, 11, 23, 27, 28], "callabl": [8, 9, 12, 13, 26], "sklearn": [8, 9, 12, 13, 18, 30, 32], "linear_model": [8, 9], "logisticregress": [8, 9], "predict_proba": [8, 9], "order": [8, 9, 24, 26, 27, 28, 29, 32, 40], "http": [8, 9, 11, 26, 27, 38], "scikit": [8, 9], "org": [8, 9, 26, 27, 38], "stabl": [8, 9], "glossari": [8, 9], "html": [8, 9, 11], "array_lik": [8, 9, 12, 13, 18, 19, 20, 21, 22, 23, 24, 32], "n_group": [8, 9], "match": [8, 9, 40], "cardin": [8, 9], "argument": [8, 9, 17, 26, 29, 33, 34, 35, 36], "current": [8, 9, 25, 30, 33], "binari": [8, 9, 12, 13, 15, 33, 40, 42], "footbibliographi": 8, "rubric": 8, "l2": [9, 18], "kwidth_x": [9, 16], "kwidth_i": [9, 16], "distancemetr": 9, "pairwis": [9, 18, 26, 29], "regular": 9, "invert": 9, "matric": [9, 22], "respect": [9, 11, 27], "singl": [9, 27, 33], "choos": [9, 24, 25, 42], "minim": 9, "median": [9, 18], "job": [9, 18, 19], "run": [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 25, 26, 27, 28, 29, 38], "parallel": [9, 18, 19, 45], "junhyung": 9, "park": 9, "uri": 9, "shalit": 9, "bernhard": 9, "sch": 9, "\u00f6": 9, "lkopf": 9, "krikamol": 9, "muandet": 9, "treatment": 9, "embed": 9, "regress": 9, "intern": [9, 11, 30, 34, 35, 36], "confer": [9, 11, 29], "8401": 9, "8412": 9, "pmlr": [9, 11], "2021": 9, "aris": 9, "collect": [9, 34, 35, 36], "f": [9, 20, 21, 30, 40], "z_covari": [10, 11, 12, 13, 14, 15, 16, 17], "standard": [10, 11, 12, 13, 14, 15, 16, 33, 40], "transform": 11, "rank": 11, "n_shuffle_nbr": [11, 13], "n_shuffl": [11, 13], "random_se": [11, 13, 24], "mutual": [11, 42, 45], "smaller": [11, 40], "fraction": 11, "uniform": 11, "avail": [11, 25, 38], "within": [11, 18, 26, 33], "defaultrng": 11, "iiint": 11, "cdot": 11, "dx": 11, "dy": 11, "dz": 11, "seen": [11, 27, 28, 40], "henc": [11, 28], "widehat": 11, "sum_": [11, 19, 21], "k_": 11, "xz": 11, "yz": 11, "digamma": 11, "hyper": 11, "cube": 11, "around": [11, 34, 35, 36, 40], "densiti": 11, "smooth": 11, "although": 11, "unlik": 11, "bandwidth": 11, "larger": 11, "lower": 11, "varianc": 11, "signific": [11, 26, 27, 28, 29, 40], "slightli": 11, "neg": 11, "while": [11, 28, 40], "quantiti": 11, "continu": [11, 45], "jakob": 11, "rung": 11, "amo": 11, "storkei": 11, "fernando": 11, "perez": 11, "cruz": 11, "editor": 11, "proceed": [11, 29], "twenti": 11, "artifici": [11, 26, 29], "volum": [11, 17, 27, 29], "84": 11, "938": 11, "947": 11, "09": 11, "11": [11, 27, 40], "apr": 11, "2018": 11, "url": [11, 26, 27], "mlr": 11, "press": [11, 17, 27, 29], "v84": 11, "runge18a": 11, "clf": [12, 13], "baseestim": [12, 13], "skorchmodel": 12, "accuracy_scor": 12, "bootstrap": [12, 13], "n_iter": [12, 13], "20": [12, 13, 45], "correct_bia": 12, "threshold": [12, 13, 16, 40], "03": [12, 13], "test_siz": [12, 13], "generate_train_test_data": [12, 13], "train": [12, 13], "ccit": [12, 13, 45], "x_train": [12, 13], "y_train": [12, 13], "x_test": [12, 13], "y_test": [12, 13], "compris": [12, 13], "joint": [12, 13, 20, 21], "f_divergence_scor": 13, "ep": [13, 21], "1e": [13, 16], "08": [13, 26], "correlation_matrix": 14, "kernel_x": 16, "kernel_i": 16, "kernel_z": 16, "null_siz": 16, "approx_with_gamma": 16, "kwidth_z": 16, "unit": 17, "n_variabl": 17, "matrix": [17, 18, 19, 22, 32, 33, 45], "judea": 17, "pearl": 17, "cambridg": 17, "univers": 17, "usa": 17, "2nd": 17, "edit": 17, "2009": 17, "isbn": [17, 27, 29], "052189560x": 17, "spirt": [17, 27, 29], "glymour": [17, 27, 29], "richard": [17, 27, 29], "schein": [17, 27, 29], "causat": [17, 27, 29], "search": [17, 27, 29], "81": [17, 27, 29, 45], "mit": [17, 27, 29], "01": [17, 27, 29], "1993": [17, 27, 29], "978": [17, 27, 29], "4612": [17, 27, 29], "7650": [17, 27, 29], "doi": [17, 26, 27, 29], "10": [17, 26, 27, 29, 40], "1007": [17, 27, 29], "2748": [17, 27, 29], "center": [18, 19], "n_samples_x": 18, "n_samples_i": 18, "string": 18, "pairwise_kernel": 18, "gaussian": 18, "valid": [18, 27, 28, 40], "pairwise_dist": 18, "featur": [18, 43, 44, 45], "med": 18, "correntropi": 19, "n_featur": [19, 22], "symmetr": [19, 32], "formula": [19, 21], "x_i": 19, "y_i": [19, 21], "y_j": [19, 21], "togeth": 19, "unbias": 19, "y_stat_q": [20, 21], "y_stat_p": [20, 21], "kl": [20, 21], "revers": [20, 21, 30], "give": [20, 21], "sake": [20, 21], "gradient": [20, 21], "descent": [20, 21], "d_": 20, "q": [20, 21], "le": 20, "sup_f": 20, "e_": 20, "sim": 20, "exp": 20, "n_samples_q": [20, 21], "variat": [20, 21], "n_samples_p": [20, 21], "f_div": 20, "hat": 21, "_": 21, "l": [21, 40], "m": 21, "b": [22, 40], "psd": 22, "div": 22, "tr": 22, "z_arr": 23, "n_features_z": 23, "space": 23, "joblib": [23, 45], "nbr": [24, 25, 26, 27, 28, 29], "restrict": [24, 27, 28], "index": [24, 32, 37], "restricted_perm": 24, "final": 24, "repeat": 24, "detail": [24, 26, 27, 28, 29, 37], "goe": 24, "through": [24, 26, 29, 37], "look": [24, 37, 40, 41], "closest": 24, "next": 24, "replac": 24, "necessari": [24, 27], "enumer": [25, 27], "metaclass": 25, "consid": [25, 26, 27, 28, 29, 33], "combin": [25, 27, 28], "nbrs_path": 25, "neighbors_path": [25, 26, 28, 29], "simpl": [25, 30], "initi": [25, 27, 28, 29], "pds_path": [25, 26, 27], "lie": [25, 27], "baseconditionalindependencetest": [26, 27, 28, 29], "min_cond_set_s": [26, 27, 28, 29], "max_cond_set_s": [26, 27, 28, 29], "max_combin": [26, 27, 28, 29], "condsel_method": [26, 27, 28, 29], "conditioningsetselect": [26, 27, 28, 29, 42], "apply_orient": [26, 29], "keep_sort": [26, 27, 28, 29], "max_it": [26, 29], "max_path_length": [26, 27], "selection_bia": 26, "pds_condsel_method": 26, "oper": 26, "keyword": [26, 29], "minimum": [26, 27, 28, 29], "constrain": [26, 29, 40], "spent": [26, 27, 28, 29], "maximum": [26, 27, 28, 29], "limit": [26, 27, 28, 29], "everi": [26, 27, 28, 29, 33], "increment": [26, 27, 28, 29], "control": [26, 27, 28, 29, 42], "conjunct": [26, 27, 28, 29, 30], "strongest": [26, 27, 28, 29], "per": [26, 27, 28, 29], "zhang": 26, "r0": [26, 29], "arrowhead": [26, 29], "tail": 26, "keep": [26, 27, 28, 29], "sort": [26, 27, 28, 29, 32], "weakest": [26, 27, 28, 29], "largest": [26, 27, 28, 29], "lowest": [26, 27, 28, 29], "lexograph": [26, 29], "ith": [26, 29], "pa": [26, 29], "parent": [26, 29], "length": [26, 27], "discrimin": [26, 27], "unlimit": [26, 27], "realiti": 26, "quit": 26, "expens": 26, "jiji": 26, "172": 26, "16": [26, 27, 45], "1873": 26, "1896": 26, "2008": 26, "www": 26, "sciencedirect": 26, "scienc": 26, "articl": 26, "pii": 26, "s0004370208001008": 26, "1016": 26, "artint": 26, "001": 26, "convert_skeleton_graph": [26, 29], "evaluate_edg": [26, 27, 28, 29], "test_stat": [26, 27, 28, 29], "constitut": [26, 29], "endogen": [26, 29], "dictionari": [26, 27, 28, 29, 30, 31], "rais": [26, 29, 30], "runtimeerror": [26, 29, 30], "impos": [26, 29], "constructor": [26, 29], "learn_skeleton": [26, 29], "sep_set": [26, 27, 28, 29], "skel_graph": [26, 29], "exhaust": [26, 28, 29, 37], "adjac": [26, 28, 29, 32, 33], "orient_edg": [26, 29], "equivalenceclass": [26, 29], "notimplementederror": 26, "orient_unshielded_tripl": [26, 29], "separatingset": [26, 29], "second_stage_condsel_method": 27, "markovian": [27, 28, 42], "proce": [27, 28], "candid": [27, 33], "possibli": 27, "learnskeleton": [27, 45], "superset": 27, "figur": 27, "17": 27, "18": 27, "rfci": [27, 28], "paper": [27, 28], "diego": 27, "colombo": 27, "marlo": 27, "h": 27, "maathui": 27, "marku": 27, "kalisch": 27, "thoma": 27, "richardson": 27, "annal": 27, "40": 27, "294": 27, "321": 27, "2012": 27, "1214": 27, "aos940": 27, "adj_graph_": [27, 28], "discov": [27, 28, 29, 40], "store": [27, 28, 30], "smallest": [27, 28], "encount": [27, 28], "sep_set_": [27, 28], "context_": [27, 28], "min_cond_set_size_": [27, 28], "max_cond_set_size_": [27, 28], "max_combinations_": [27, 28], "n_iters_": [27, 28], "max_path_length_": 27, "th": 27, "ones": [28, 34, 35, 36], "rememb": 28, "link": [28, 43], "essenti": 28, "sg": 28, "tradit": 28, "associ": 29, "christoph": 29, "explan": 29, "background": 29, "eleventh": 29, "uncertainti": 29, "montreal": 29, "qu": 29, "02": 29, "2013": 29, "separating_sets_": 29, "nest": [29, 30], "being": 29, "represent": 29, "These": [29, 34, 35, 36, 39], "rest": 29, "_protocol": 30, "num_distribut": 30, "obs_distribut": 30, "intervention_target": 30, "factori": [30, 45], "symmetric_diff_map": 30, "sigma_map": 30, "f_node": 30, "dure": 30, "intervent": [30, 42], "unknown": 30, "valueerror": 30, "prior": 30, "alongsid": 30, "priori": [30, 40], "explicit": [30, 41], "yet": 30, "done": 30, "ill": 30, "leav": 30, "isomorph": 30, "is_isomorph": [30, 40], "__hash__": 30, "add_state_vari": 30, "deepcopi": 30, "get_non_f_nod": 30, "get_param": 30, "deep": 30, "todo": 30, "pipelin": 30, "subobject": 30, "param": [30, 34, 35, 36], "reverse_sigma_map": 30, "sigma": 30, "set_param": 30, "latter": 30, "compon": 30, "__": 30, "learner": [30, 45], "on_miss": 30, "warn": [30, 40], "ignor": 30, "behavior": [30, 40], "userwarn": 30, "state_var": 30, "create_us": 31, "context_build": 31, "contextbuild": [31, 45], "dataclass": 31, "metadata": 31, "except": [31, 40], "again": 31, "true_graph": [32, 33], "pred_graph": [32, 33], "label": 32, "ndarrai": 32, "scalartyp": 32, "confus": [32, 45], "n_class": 32, "reorder": 32, "subset": 32, "appear": 32, "y_true": 32, "y_pred": 32, "pred": 32, "cm": 32, "confusion_matrix": 32, "consider": 32, "direction": 32, "double_for_anticaus": 33, "ham": [33, 45], "shd": 33, "miss": 33, "count": 33, "wrong": 33, "remark": 33, "mixededgegraph": [33, 37, 45], "infin": 33, "you": [33, 37, 40, 41], "bayesian": 33, "network": [33, 40], "sub": 33, "circular": 33, "systemat": 33, "central": [34, 35, 36], "version": [34, 35, 36, 37, 43], "alias": [34, 35, 36], "wrapper": [34, 35, 36, 45], "builtin": [34, 35, 36], "abc": [34, 35, 36], "inst": [34, 35, 36], "alia": [34, 35, 36], "mix": 37, "admg": 37, "top": 37, "your": [37, 40], "pull": 37, "request": 37, "walk": 37, "pleas": 37, "tool": 37, "public": 37, "numer": 37, "instal": 37, "usag": 37, "tutori": [37, 40, 45], "basic": [37, 41], "releas": 37, "histori": 37, "develop": [37, 45], "who": [37, 45], "contribut": [37, 45], "codebas": 37, "contributor": 37, "page": [37, 43], "modul": 37, "pip": 38, "poetri": 38, "pypi": 38, "project": [38, 45], "recommend": 38, "repositori": [38, 45], "github": 38, "git": 38, "why": 38, "sever": 39, "basi": 39, "highlight": 40, "challeng": 40, "bnlearn": 40, "bn": 40, "load": 40, "import_exampl": 40, "asia": [40, 45], "renam": 40, "tub": 40, "lung": 40, "bronc": 40, "smoke": 40, "xrai": 40, "dysp": 40, "inplac": 40, "gt": 40, "extract": 40, "file": 40, "ll": 40, "studi": 40, "expert": 40, "system": 40, "diagnos": 40, "diseas": 40, "lauritzen": 40, "spiegelhalt": 40, "1988": 40, "respiratori": 40, "symption": 40, "evid": 40, "goal": 40, "distinguish": 40, "tuberculosi": 40, "cancer": 40, "bronchiti": 40, "patient": 40, "end": 40, "ground_truth_edg": 40, "ground_truth": 40, "po": 40, "spring_layout": 40, "with_label": 40, "interpret": 40, "recent": 40, "visit": 40, "smoker": 40, "chest": 40, "rai": 40, "dyspnoea": 40, "difficulti": 40, "breath": 40, "symptom": 40, "further": 40, "learnabl": 40, "alon": 40, "mixtur": 40, "technic": 40, "cpdag_direct": 40, "cpdag_undirect": 40, "ground_truth_cpdag": 40, "commonli": 40, "simul": 40, "sometim": 40, "erron": 40, "conclus": 40, "sequenc": 40, "accumul": 40, "adjust": 40, "comparison": 40, "compens": 40, "thing": 40, "arguabl": 40, "decreas": 40, "favor": 40, "heurist": 40, "rigor": 40, "anti": 40, "pattern": 40, "librari": [40, 43], "14": 40, "56": 40, "tb": 40, "against": 40, "57": 40, "58": 40, "match_direct": 40, "sub_directed_graph": 40, "match_undirect": 40, "sub_undirected_graph": 40, "maxim": 40, "chanc": 40, "hard": 40, "inabl": 40, "lead": 40, "beyond": 40, "struggl": 40, "philosophi": 40, "dodiscoveri": 40, "easi": 40, "discuss": 40, "journal": 40, "royal": 40, "societi": 40, "157": 40, "224": 40, "abl": 41, "everyth": 41, "concept": 41, "auto_examples_python": 41, "zip": 41, "auto_examples_jupyt": 41, "hyperparamet": 42, "overfit": 42, "cmitest": [42, 45], "classifiercmitest": [42, 45], "pearson": 42, "correl": 42, "fisherzcitest": 42, "categor": 42, "kernelcitest": 42, "classifi": [42, 45], "classifiercitest": [42, 45], "kernelcdtest": [42, 45], "bregmancdtest": [42, 45], "major": [43, 44, 45], "enhanc": [43, 44, 45], "tip": 43, "subscrib": 43, "io": 43, "notifi": 43, "integr": 45, "15": 45, "submodul": 45, "chri": 45, "trevino": 45, "42": 45, "confusion_matrix_network": 45, "48": 45, "28": 45, "30": 45, "learnsemimarkovianskeleton": 45, "52": 45, "structure_hamming_dist": 45, "55": 45, "pr": 45, "branch": 45, "conflict": 45, "74": 45, "robert": 45, "osazuwa": 45, "ness": 45, "67": 45, "gin": 45, "94": 45, "82": 45, "83": 45, "85": 45, "jaron": 45, "lee": 45, "106": 45, "commit": 45, "hook": 45, "lint": 45, "format": 45, "117": 45, "127": 45, "thank": 45, "everyon": 45, "mainten": 45, "incept": 45}, "objects": {"": [[0, 0, 0, "-", "dodiscover"]], "dodiscover": [[4, 1, 1, "", "ContextBuilder"], [5, 1, 1, "", "EquivalenceClass"], [6, 1, 1, "", "Graph"], [3, 0, 0, "-", "constraint"], [31, 4, 1, "", "make_context"]], "dodiscover.ContextBuilder": [[4, 2, 1, "", "build"], [4, 2, 1, "", "edges"], [4, 2, 1, "", "excluded_edges"], [4, 2, 1, "", "included_edges"], [4, 2, 1, "", "init_graph"], [4, 2, 1, "", "latent_variables"], [4, 2, 1, "", "observed_variables"], [4, 2, 1, "", "state_variable"], [4, 2, 1, "", "state_variables"], [4, 2, 1, "", "variables"]], "dodiscover.EquivalenceClass": [[5, 2, 1, "", "add_edge"], [5, 2, 1, "", "add_node"], [5, 3, 1, "", "bidirected_edge_name"], [5, 3, 1, "", "circle_edge_name"], [5, 2, 1, "", "copy"], [5, 3, 1, "", "directed_edge_name"], [5, 2, 1, "", "edges"], [5, 3, 1, "", "excluded_triples"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "mark_unfaithful_triple"], [5, 2, 1, "", "neighbors"], [5, 3, 1, "", "nodes"], [5, 2, 1, "", "orient_uncertain_edge"], [5, 2, 1, "", "predecessors"], [5, 2, 1, "", "remove_edge"], [5, 2, 1, "", "remove_edges_from"], [5, 2, 1, "", "remove_node"], [5, 2, 1, "", "subgraph"], [5, 2, 1, "", "successors"], [5, 2, 1, "", "to_undirected"], [5, 3, 1, "", "undirected_edge_name"]], "dodiscover.Graph": [[6, 2, 1, "", "add_edge"], [6, 2, 1, "", "add_node"], [6, 2, 1, "", "copy"], [6, 2, 1, "", "edges"], [6, 2, 1, "", "has_edge"], [6, 2, 1, "", "neighbors"], [6, 3, 1, "", "nodes"], [6, 2, 1, "", "remove_edge"], [6, 2, 1, "", "remove_edges_from"], [6, 2, 1, "", "remove_node"], [6, 2, 1, "", "subgraph"], [6, 2, 1, "", "to_undirected"]], "dodiscover.cd": [[7, 1, 1, "", "BaseConditionalDiscrepancyTest"], [8, 1, 1, "", "BregmanCDTest"], [9, 1, 1, "", "KernelCDTest"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[7, 2, 1, "", "compute_null"], [7, 2, 1, "", "test"]], "dodiscover.cd.BregmanCDTest": [[8, 2, 1, "", "compute_null"], [8, 2, 1, "", "test"]], "dodiscover.cd.KernelCDTest": [[9, 2, 1, "", "compute_null"], [9, 2, 1, "", "test"]], "dodiscover.ci": [[10, 1, 1, "", "BaseConditionalIndependenceTest"], [11, 1, 1, "", "CMITest"], [12, 1, 1, "", "ClassifierCITest"], [13, 1, 1, "", "ClassifierCMITest"], [14, 1, 1, "", "FisherZCITest"], [15, 1, 1, "", "GSquareCITest"], [16, 1, 1, "", "KernelCITest"], [17, 1, 1, "", "Oracle"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[10, 2, 1, "", "test"]], "dodiscover.ci.CMITest": [[11, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCITest": [[12, 2, 1, "", "generate_train_test_data"], [12, 2, 1, "", "test"]], "dodiscover.ci.ClassifierCMITest": [[13, 2, 1, "", "generate_train_test_data"], [13, 2, 1, "", "test"]], "dodiscover.ci.FisherZCITest": [[14, 2, 1, "", "test"]], "dodiscover.ci.GSquareCITest": [[15, 2, 1, "", "test"]], "dodiscover.ci.KernelCITest": [[16, 2, 1, "", "test"]], "dodiscover.ci.Oracle": [[17, 2, 1, "", "test"]], "dodiscover.ci.kernel_utils": [[18, 4, 1, "", "compute_kernel"], [19, 4, 1, "", "corrent_matrix"], [20, 4, 1, "", "f_divergence_score"], [21, 4, 1, "", "kl_divergence_score"], [22, 4, 1, "", "von_neumann_divergence"]], "dodiscover.ci.monte_carlo": [[23, 4, 1, "", "generate_knn_in_subspace"], [24, 4, 1, "", "restricted_nbr_permutation"]], "dodiscover.constraint": [[25, 1, 1, "", "ConditioningSetSelection"], [26, 1, 1, "", "FCI"], [27, 1, 1, "", "LearnSemiMarkovianSkeleton"], [28, 1, 1, "", "LearnSkeleton"], [29, 1, 1, "", "PC"]], "dodiscover.constraint.ConditioningSetSelection": [[25, 5, 1, "", "COMPLETE"], [25, 5, 1, "", "NBRS"], [25, 5, 1, "", "NBRS_PATH"], [25, 5, 1, "", "PDS"], [25, 5, 1, "", "PDS_PATH"]], "dodiscover.constraint.FCI": [[26, 2, 1, "", "evaluate_edge"], [26, 2, 1, "", "fit"], [26, 2, 1, "", "learn_skeleton"], [26, 2, 1, "", "orient_edges"], [26, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[27, 2, 1, "", "evaluate_edge"], [27, 2, 1, "", "fit"]], "dodiscover.constraint.LearnSkeleton": [[28, 2, 1, "", "evaluate_edge"], [28, 2, 1, "", "fit"]], "dodiscover.constraint.PC": [[29, 2, 1, "", "convert_skeleton_graph"], [29, 2, 1, "", "evaluate_edge"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "learn_skeleton"], [29, 2, 1, "", "orient_edges"], [29, 2, 1, "", "orient_unshielded_triples"]], "dodiscover.context": [[30, 1, 1, "", "Context"]], "dodiscover.context.Context": [[30, 2, 1, "", "__hash__"], [30, 2, 1, "", "add_state_variable"], [30, 2, 1, "", "copy"], [30, 2, 1, "", "get_non_f_nodes"], [30, 2, 1, "", "get_params"], [30, 2, 1, "", "reverse_sigma_map"], [30, 2, 1, "", "set_params"], [30, 2, 1, "", "state_variable"]], "dodiscover.metrics": [[32, 4, 1, "", "confusion_matrix_networks"], [33, 4, 1, "", "structure_hamming_dist"]], "dodiscover.typing": [[34, 6, 1, "", "Column"], [35, 6, 1, "", "NetworkxGraph"], [36, 6, 1, "", "SeparatingSet"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "context": [0, 1, 30, 40], "causal": [0, 1, 3, 39, 40], "discoveri": [0, 1, 3, 39, 40], "constraint": [0, 3, 25, 26, 27, 28, 29], "base": [0, 2, 3], "structur": [0, 1], "learn": [0, 1, 3], "compar": 0, "algorithm": [0, 1, 40], "type": [0, 34, 35, 36], "graph": [0, 6], "protocol": 0, "condit": [0, 1, 2, 3, 40], "test": [0, 1, 40], "independ": [0, 1, 2, 40], "k": 0, "sampl": 0, "util": 0, "pc": [1, 29, 40], "from": [1, 40], "observ": [1, 3, 40], "data": [1, 2, 3, 40], "without": [1, 39, 40], "latent": [1, 39, 40], "confound": [1, 39, 40], "simul": 1, "some": [1, 40], "instanti": [1, 40], "defin": [1, 40], "run": [1, 40], "mutual": 2, "inform": 2, "partial": 2, "pearson": 2, "correl": 2, "discret": 2, "categor": 2, "binari": 2, "kernel": 2, "approach": 2, "classifi": 2, "discrep": 2, "bregman": 2, "diverg": 2, "fundament": 3, "assumpt": 3, "non": 3, "parametr": 3, "markovian": 3, "scm": 3, "semi": 3, "intervent": 3, "choos": 3, "set": 3, "hyperparamet": 3, "control": 3, "overfit": 3, "robust": 3, "dodiscov": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41], "contextbuild": 4, "equivalenceclass": 5, "cd": [7, 8, 9], "baseconditionaldiscrepancytest": 7, "bregmancdtest": 8, "kernelcdtest": 9, "ci": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "baseconditionalindependencetest": 10, "exampl": [10, 15, 17, 31, 41], "us": [10, 15, 17, 31, 41], "cmitest": 11, "classifiercitest": 12, "classifiercmitest": 13, "fisherzcitest": 14, "gsquarecitest": 15, "kernelcitest": 16, "oracl": 17, "kernel_util": [18, 19, 20, 21, 22], "compute_kernel": 18, "corrent_matrix": 19, "f_divergence_scor": 20, "kl_divergence_scor": 21, "von_neumann_diverg": 22, "monte_carlo": [23, 24], "generate_knn_in_subspac": 23, "restricted_nbr_permut": 24, "conditioningsetselect": 25, "fci": 26, "learnsemimarkovianskeleton": 27, "learnskeleton": 28, "make_context": 31, "metric": [32, 33], "confusion_matrix_network": 32, "structure_hamming_dist": 33, "column": 34, "networkxgraph": 35, "separatingset": 36, "content": 37, "get": 37, "start": 37, "team": 37, "indic": 37, "tabl": 37, "instal": 38, "tutori": [39, 41], "basic": 39, "model": 39, "refer": 40, "user": 42, "guid": 42, "releas": 43, "histori": 43, "what": 45, "": 45, "new": 45, "version": 45, "0": 45, "1": 45, "changelog": 45, "code": 45, "document": 45, "contributor": 45}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Context for causal discovery": [[0, "context-for-causal-discovery"]], "Constraint-based structure learning": [[0, "constraint-based-structure-learning"]], "Comparing causal discovery algorithms": [[0, "comparing-causal-discovery-algorithms"]], "Typing": [[0, "typing"]], "Graph protocols": [[0, "graph-protocols"]], "Conditional Testing": [[0, "conditional-testing"]], "Conditional Independence Testing": [[0, "conditional-independence-testing"]], "Conditional k-sample testing": [[0, "conditional-k-sample-testing"]], "Utilities": [[0, "utilities"]], "PC algorithm for causal discovery from observational data without latent confounders": [[1, "pc-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"], [40, "PC-algorithm-for-causal-discovery-from-observational-data-without-latent-confounders"]], "Simulate some data": [[1, "simulate-some-data"]], "Instantiate some conditional independence tests": [[1, "instantiate-some-conditional-independence-tests"], [40, "Instantiate-some-conditional-independence-tests"]], "Define the context": [[1, "define-the-context"], [40, "Define-the-context"]], "Run structure learning algorithm": [[1, "run-structure-learning-algorithm"]], "Independence": [[2, "independence"]], "Conditional Mutual Information": [[2, "conditional-mutual-information"]], "Partial (Pearson) Correlation": [[2, "partial-pearson-correlation"]], "Discrete, Categorical and Binary Data": [[2, "discrete-categorical-and-binary-data"], [2, "id6"]], "Kernel-Approaches": [[2, "kernel-approaches"], [2, "id7"]], "Classifier-based Approaches": [[2, "classifier-based-approaches"]], "Conditional Discrepancy": [[2, "conditional-discrepancy"]], "Bregman-Divergences": [[2, "bregman-divergences"]], "Constraint-based causal discovery": [[3, "module-dodiscover.constraint"]], "Fundamental Assumptions of Constraint-Based Causal Discovery": [[3, "fundamental-assumptions-of-constraint-based-causal-discovery"]], "(Non-parametric) Markovian SCMs with Observational Data": [[3, "non-parametric-markovian-scms-with-observational-data"]], "(Non-parametric) Semi-Markovian SCMs with Observational Data": [[3, "non-parametric-semi-markovian-scms-with-observational-data"]], "(Non-parametric) SCMs with Interventional Data": [[3, "non-parametric-scms-with-interventional-data"]], "Choosing the conditioning sets": [[3, "choosing-the-conditioning-sets"]], "Hyperparameters and controlling overfitting": [[3, "hyperparameters-and-controlling-overfitting"]], "Robust learning": [[3, "robust-learning"]], "dodiscover.ContextBuilder": [[4, "dodiscover-contextbuilder"]], "dodiscover.EquivalenceClass": [[5, "dodiscover-equivalenceclass"]], "dodiscover.Graph": [[6, "dodiscover-graph"]], "dodiscover.cd.BaseConditionalDiscrepancyTest": [[7, "dodiscover-cd-baseconditionaldiscrepancytest"]], "dodiscover.cd.BregmanCDTest": [[8, "dodiscover-cd-bregmancdtest"]], "dodiscover.cd.KernelCDTest": [[9, "dodiscover-cd-kernelcdtest"]], "dodiscover.ci.BaseConditionalIndependenceTest": [[10, "dodiscover-ci-baseconditionalindependencetest"]], "Examples using dodiscover.ci.BaseConditionalIndependenceTest": [[10, "examples-using-dodiscover-ci-baseconditionalindependencetest"]], "dodiscover.ci.CMITest": [[11, "dodiscover-ci-cmitest"]], "dodiscover.ci.ClassifierCITest": [[12, "dodiscover-ci-classifiercitest"]], "dodiscover.ci.ClassifierCMITest": [[13, "dodiscover-ci-classifiercmitest"]], "dodiscover.ci.FisherZCITest": [[14, "dodiscover-ci-fisherzcitest"]], "dodiscover.ci.GSquareCITest": [[15, "dodiscover-ci-gsquarecitest"]], "Examples using dodiscover.ci.GSquareCITest": [[15, "examples-using-dodiscover-ci-gsquarecitest"]], "dodiscover.ci.KernelCITest": [[16, "dodiscover-ci-kernelcitest"]], "dodiscover.ci.Oracle": [[17, "dodiscover-ci-oracle"]], "Examples using dodiscover.ci.Oracle": [[17, "examples-using-dodiscover-ci-oracle"]], "dodiscover.ci.kernel_utils.compute_kernel": [[18, "dodiscover-ci-kernel-utils-compute-kernel"]], "dodiscover.ci.kernel_utils.corrent_matrix": [[19, "dodiscover-ci-kernel-utils-corrent-matrix"]], "dodiscover.ci.kernel_utils.f_divergence_score": [[20, "dodiscover-ci-kernel-utils-f-divergence-score"]], "dodiscover.ci.kernel_utils.kl_divergence_score": [[21, "dodiscover-ci-kernel-utils-kl-divergence-score"]], "dodiscover.ci.kernel_utils.von_neumann_divergence": [[22, "dodiscover-ci-kernel-utils-von-neumann-divergence"]], "dodiscover.ci.monte_carlo.generate_knn_in_subspace": [[23, "dodiscover-ci-monte-carlo-generate-knn-in-subspace"]], "dodiscover.ci.monte_carlo.restricted_nbr_permutation": [[24, "dodiscover-ci-monte-carlo-restricted-nbr-permutation"]], "dodiscover.constraint.ConditioningSetSelection": [[25, "dodiscover-constraint-conditioningsetselection"]], "dodiscover.constraint.FCI": [[26, "dodiscover-constraint-fci"]], "dodiscover.constraint.LearnSemiMarkovianSkeleton": [[27, "dodiscover-constraint-learnsemimarkovianskeleton"]], "dodiscover.constraint.LearnSkeleton": [[28, "dodiscover-constraint-learnskeleton"]], "dodiscover.constraint.PC": [[29, "dodiscover-constraint-pc"]], "dodiscover.context.Context": [[30, "dodiscover-context-context"]], "dodiscover.make_context": [[31, "dodiscover-make-context"]], "Examples using dodiscover.make_context": [[31, "examples-using-dodiscover-make-context"]], "dodiscover.metrics.confusion_matrix_networks": [[32, "dodiscover-metrics-confusion-matrix-networks"]], "dodiscover.metrics.structure_hamming_dist": [[33, "dodiscover-metrics-structure-hamming-dist"]], "dodiscover.typing.Column": [[34, "dodiscover-typing-column"]], "dodiscover.typing.NetworkxGraph": [[35, "dodiscover-typing-networkxgraph"]], "dodiscover.typing.SeparatingSet": [[36, "dodiscover-typing-separatingset"]], "dodiscover": [[37, "dodiscover"]], "Contents": [[37, "contents"]], "Getting started:": [[37, null]], "Team": [[37, "team"]], "Indices and tables": [[37, "indices-and-tables"]], "Installation": [[38, "installation"]], "Tutorials": [[39, "tutorials"]], "Basic causal discovery models without latent confounders": [[39, "basic-causal-discovery-models-without-latent-confounders"]], "Run discovery algorithm": [[40, "Run-discovery-algorithm"]], "References": [[40, "References"]], "Examples and Tutorials using DoDiscover": [[41, "examples-and-tutorials-using-dodiscover"]], "Examples": [[41, "examples"]], "User Guide": [[42, "user-guide"]], "Release History": [[43, "release-history"]], "What\u2019s new?": [[45, "what-s-new"]], "Version 0.1": [[45, "version-0-1"]], "Changelog": [[45, "changelog"]], "Code and Documentation Contributors": [[45, "code-and-documentation-contributors"]]}, "indexentries": {"dodiscover": [[0, "module-dodiscover"]], "module": [[0, "module-dodiscover"], [3, "module-dodiscover.constraint"]], "dodiscover.constraint": [[3, "module-dodiscover.constraint"]], "contextbuilder (class in dodiscover)": [[4, "dodiscover.ContextBuilder"]], "build() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.build"]], "edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.edges"]], "excluded_edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.excluded_edges"]], "included_edges() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.included_edges"]], "init_graph() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.init_graph"]], "latent_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.latent_variables"]], "observed_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.observed_variables"]], "state_variable() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.state_variable"]], "state_variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.state_variables"]], "variables() (dodiscover.contextbuilder method)": [[4, "dodiscover.ContextBuilder.variables"]], "equivalenceclass (class in dodiscover)": [[5, "dodiscover.EquivalenceClass"]], "add_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.add_edge"]], "add_node() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.add_node"]], "bidirected_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.bidirected_edge_name"]], "circle_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.circle_edge_name"]], "copy() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.copy"]], "directed_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.directed_edge_name"]], "edges() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.edges"]], "excluded_triples (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.excluded_triples"]], "has_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.has_edge"]], "mark_unfaithful_triple() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.mark_unfaithful_triple"]], "neighbors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.neighbors"]], "nodes (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.nodes"]], "orient_uncertain_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.orient_uncertain_edge"]], "predecessors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.predecessors"]], "remove_edge() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_edge"]], "remove_edges_from() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_edges_from"]], "remove_node() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.remove_node"]], "subgraph() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.subgraph"]], "successors() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.successors"]], "to_undirected() (dodiscover.equivalenceclass method)": [[5, "dodiscover.EquivalenceClass.to_undirected"]], "undirected_edge_name (dodiscover.equivalenceclass property)": [[5, "dodiscover.EquivalenceClass.undirected_edge_name"]], "graph (class in dodiscover)": [[6, "dodiscover.Graph"]], "add_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.add_edge"]], "add_node() (dodiscover.graph method)": [[6, "dodiscover.Graph.add_node"]], "copy() (dodiscover.graph method)": [[6, "dodiscover.Graph.copy"]], "edges() (dodiscover.graph method)": [[6, "dodiscover.Graph.edges"]], "has_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.has_edge"]], "neighbors() (dodiscover.graph method)": [[6, "dodiscover.Graph.neighbors"]], "nodes (dodiscover.graph property)": [[6, "dodiscover.Graph.nodes"]], "remove_edge() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_edge"]], "remove_edges_from() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_edges_from"]], "remove_node() (dodiscover.graph method)": [[6, "dodiscover.Graph.remove_node"]], "subgraph() (dodiscover.graph method)": [[6, "dodiscover.Graph.subgraph"]], "to_undirected() (dodiscover.graph method)": [[6, "dodiscover.Graph.to_undirected"]], "baseconditionaldiscrepancytest (class in dodiscover.cd)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest"]], "compute_null() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest.compute_null"]], "test() (dodiscover.cd.baseconditionaldiscrepancytest method)": [[7, "dodiscover.cd.BaseConditionalDiscrepancyTest.test"]], "bregmancdtest (class in dodiscover.cd)": [[8, "dodiscover.cd.BregmanCDTest"]], "compute_null() (dodiscover.cd.bregmancdtest method)": [[8, "dodiscover.cd.BregmanCDTest.compute_null"]], "test() (dodiscover.cd.bregmancdtest method)": [[8, "dodiscover.cd.BregmanCDTest.test"]], "kernelcdtest (class in dodiscover.cd)": [[9, "dodiscover.cd.KernelCDTest"]], "compute_null() (dodiscover.cd.kernelcdtest method)": [[9, "dodiscover.cd.KernelCDTest.compute_null"]], "test() (dodiscover.cd.kernelcdtest method)": [[9, "dodiscover.cd.KernelCDTest.test"]], "baseconditionalindependencetest (class in dodiscover.ci)": [[10, "dodiscover.ci.BaseConditionalIndependenceTest"]], "test() (dodiscover.ci.baseconditionalindependencetest method)": [[10, "dodiscover.ci.BaseConditionalIndependenceTest.test"]], "cmitest (class in dodiscover.ci)": [[11, "dodiscover.ci.CMITest"]], "test() (dodiscover.ci.cmitest method)": [[11, "dodiscover.ci.CMITest.test"]], "classifiercitest (class in dodiscover.ci)": [[12, "dodiscover.ci.ClassifierCITest"]], "generate_train_test_data() (dodiscover.ci.classifiercitest method)": [[12, "dodiscover.ci.ClassifierCITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercitest method)": [[12, "dodiscover.ci.ClassifierCITest.test"]], "classifiercmitest (class in dodiscover.ci)": [[13, "dodiscover.ci.ClassifierCMITest"]], "generate_train_test_data() (dodiscover.ci.classifiercmitest method)": [[13, "dodiscover.ci.ClassifierCMITest.generate_train_test_data"]], "test() (dodiscover.ci.classifiercmitest method)": [[13, "dodiscover.ci.ClassifierCMITest.test"]], "fisherzcitest (class in dodiscover.ci)": [[14, "dodiscover.ci.FisherZCITest"]], "test() (dodiscover.ci.fisherzcitest method)": [[14, "dodiscover.ci.FisherZCITest.test"]], "gsquarecitest (class in dodiscover.ci)": [[15, "dodiscover.ci.GSquareCITest"]], "test() (dodiscover.ci.gsquarecitest method)": [[15, "dodiscover.ci.GSquareCITest.test"]], "kernelcitest (class in dodiscover.ci)": [[16, "dodiscover.ci.KernelCITest"]], "test() (dodiscover.ci.kernelcitest method)": [[16, "dodiscover.ci.KernelCITest.test"]], "oracle (class in dodiscover.ci)": [[17, "dodiscover.ci.Oracle"]], "test() (dodiscover.ci.oracle method)": [[17, "dodiscover.ci.Oracle.test"]], "compute_kernel() (in module dodiscover.ci.kernel_utils)": [[18, "dodiscover.ci.kernel_utils.compute_kernel"]], "corrent_matrix() (in module dodiscover.ci.kernel_utils)": [[19, "dodiscover.ci.kernel_utils.corrent_matrix"]], "f_divergence_score() (in module dodiscover.ci.kernel_utils)": [[20, "dodiscover.ci.kernel_utils.f_divergence_score"]], "kl_divergence_score() (in module dodiscover.ci.kernel_utils)": [[21, "dodiscover.ci.kernel_utils.kl_divergence_score"]], "von_neumann_divergence() (in module dodiscover.ci.kernel_utils)": [[22, "dodiscover.ci.kernel_utils.von_neumann_divergence"]], "generate_knn_in_subspace() (in module dodiscover.ci.monte_carlo)": [[23, "dodiscover.ci.monte_carlo.generate_knn_in_subspace"]], "restricted_nbr_permutation() (in module dodiscover.ci.monte_carlo)": [[24, "dodiscover.ci.monte_carlo.restricted_nbr_permutation"]], "complete (dodiscover.constraint.conditioningsetselection attribute)": [[25, "dodiscover.constraint.ConditioningSetSelection.COMPLETE"]], "conditioningsetselection (class in dodiscover.constraint)": [[25, "dodiscover.constraint.ConditioningSetSelection"]], "nbrs (dodiscover.constraint.conditioningsetselection attribute)": [[25, "dodiscover.constraint.ConditioningSetSelection.NBRS"]], "nbrs_path (dodiscover.constraint.conditioningsetselection attribute)": [[25, "dodiscover.constraint.ConditioningSetSelection.NBRS_PATH"]], "pds (dodiscover.constraint.conditioningsetselection attribute)": [[25, "dodiscover.constraint.ConditioningSetSelection.PDS"]], "pds_path (dodiscover.constraint.conditioningsetselection attribute)": [[25, "dodiscover.constraint.ConditioningSetSelection.PDS_PATH"]], "fci (class in dodiscover.constraint)": [[26, "dodiscover.constraint.FCI"]], "evaluate_edge() (dodiscover.constraint.fci method)": [[26, "dodiscover.constraint.FCI.evaluate_edge"]], "fit() (dodiscover.constraint.fci method)": [[26, "dodiscover.constraint.FCI.fit"]], "learn_skeleton() (dodiscover.constraint.fci method)": [[26, "dodiscover.constraint.FCI.learn_skeleton"]], "orient_edges() (dodiscover.constraint.fci method)": [[26, "dodiscover.constraint.FCI.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.fci method)": [[26, "dodiscover.constraint.FCI.orient_unshielded_triples"]], "learnsemimarkovianskeleton (class in dodiscover.constraint)": [[27, "dodiscover.constraint.LearnSemiMarkovianSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[27, "dodiscover.constraint.LearnSemiMarkovianSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnsemimarkovianskeleton method)": [[27, "dodiscover.constraint.LearnSemiMarkovianSkeleton.fit"]], "learnskeleton (class in dodiscover.constraint)": [[28, "dodiscover.constraint.LearnSkeleton"]], "evaluate_edge() (dodiscover.constraint.learnskeleton method)": [[28, "dodiscover.constraint.LearnSkeleton.evaluate_edge"]], "fit() (dodiscover.constraint.learnskeleton method)": [[28, "dodiscover.constraint.LearnSkeleton.fit"]], "pc (class in dodiscover.constraint)": [[29, "dodiscover.constraint.PC"]], "convert_skeleton_graph() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.convert_skeleton_graph"]], "evaluate_edge() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.evaluate_edge"]], "fit() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.fit"]], "learn_skeleton() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.learn_skeleton"]], "orient_edges() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.orient_edges"]], "orient_unshielded_triples() (dodiscover.constraint.pc method)": [[29, "dodiscover.constraint.PC.orient_unshielded_triples"]], "context (class in dodiscover.context)": [[30, "dodiscover.context.Context"]], "__hash__() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.__hash__"]], "add_state_variable() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.add_state_variable"]], "copy() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.copy"]], "get_non_f_nodes() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.get_non_f_nodes"]], "get_params() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.get_params"]], "reverse_sigma_map() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.reverse_sigma_map"]], "set_params() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.set_params"]], "state_variable() (dodiscover.context.context method)": [[30, "dodiscover.context.Context.state_variable"]], "make_context() (in module dodiscover)": [[31, "dodiscover.make_context"]], "confusion_matrix_networks() (in module dodiscover.metrics)": [[32, "dodiscover.metrics.confusion_matrix_networks"]], "structure_hamming_dist() (in module dodiscover.metrics)": [[33, "dodiscover.metrics.structure_hamming_dist"]], "column (in module dodiscover.typing)": [[34, "dodiscover.typing.Column"]], "networkxgraph (in module dodiscover.typing)": [[35, "dodiscover.typing.NetworkxGraph"]], "separatingset (in module dodiscover.typing)": [[36, "dodiscover.typing.SeparatingSet"]]}})